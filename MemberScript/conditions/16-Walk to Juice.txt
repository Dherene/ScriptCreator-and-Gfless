periodical
0
import random
if int(self.map_id) == 22 and int(self.attr1) == 5 and getattr(self, "fruit_trees", []):
    time.sleep(self.randomize_delay(1, 1.5))
    if not hasattr(self, "current_tree") or not self.current_tree:
        index = random.randrange(len(self.fruit_trees))
        self.current_tree = self.fruit_trees.pop(index)
    if "target_x" not in self.current_tree or "target_y" not in self.current_tree:
        tree_x = self.current_tree["x"]
        tree_y = self.current_tree["y"]
        offsets = [
            (-1, 0),
            (1, 0),
            (0, -1),
            (0, 1),
            (-1, -1),
            (-1, 1),
            (1, -1),
            (1, 1),
        ]
        random.shuffle(offsets)
        for dx, dy in offsets:
            target_x = tree_x + dx
            target_y = tree_y + dy
            if target_x == tree_x and target_y == tree_y:
                continue
            self.current_tree["target_x"] = target_x
            self.current_tree["target_y"] = target_y
            break
        else:
            self.current_tree["target_x"] = tree_x
            self.current_tree["target_y"] = tree_y
    time.sleep(self.randomize_delay(1, 1.5))
    cond.off = 29
    cond.off = 2
    cond.off = 3
    cond.off = 4
    target_x = self.current_tree.get("target_x", self.current_tree["x"])
    target_y = self.current_tree.get("target_y", self.current_tree["y"])
    self.walk_to_point([target_x, target_y])
    print(f"15-[MEMBER] {self.name} Walk close juice")
    cond.on = 31
    self.attr1 = 6
