periodical
1
if int(self.attr6) == 1  #miembro 1
and int(self.attr3) == 0 
and int(self.map_id) == 20 
and int(self.pos_x) == 34
and int(self.pos_y) == 113
and int(self.subgroup_member_index) == 1:

	time.sleep(self.randomize_delay(1,2))
	self.api.send_packet("wreq 1")  #entra primero como leader
	time.sleep(self.randomize_delay(4,5))
	selfsubg.entren = 1 #habilita a los miembros a caminar al TS y entrar
	selfsubg.sincro = int(selfsubg.sincro) + 1
	print(f"El valor de Sincro es: {selfsubg.sincro}") #deberia ser 13 aca, sincronizador para saber quienes están adentro

if int(self.attr6) == 1  #miembro 2
and int(self.attr3) == 0 
and int(self.map_id) == 20 
and int(self.pos_x) == 34
and int(self.pos_y) == 113
and int(self.subgroup_member_index) == 2 
and int(selfsubg.entren) == 1: #cuando el leader entra cambia esta variable a 1, para que los miembros entren

	time.sleep(self.randomize_delay(1,2))  
	self.api.send_packet(f"#wreq^3^{index[1].id}")  #entra al TS del leader que pertenece a index 1
	time.sleep(self.randomize_delay(4,5))
	selfsubg.sincro = int(selfsubg.sincro) + 1
	print(f"El valor de Sincro es: {selfsubg.sincro}") #entran los miembros y sincro debería completarse en 15

if int(self.attr6) == 1  #miembro 3
and int(self.attr3) == 0 
and int(self.map_id) == 20 
and int(self.pos_x) == 34
and int(self.pos_y) == 113
and int(self.subgroup_member_index) == 3 
and int(selfsubg.entren) == 1: #cuando el leader entra cambia esta variable a 1, para que los miembros entren

	time.sleep(self.randomize_delay(1,2))
	self.api.send_packet(f"#wreq^3^{index[1].id}")  #entra al TS del leader que pertenece a index 1
	time.sleep(self.randomize_delay(4,5))
	selfsubg.sincro = int(selfsubg.sincro) + 1
	print(f"El valor de Sincro es: {selfsubg.sincro}") #entran los miembros y sincro debería completarse en 15