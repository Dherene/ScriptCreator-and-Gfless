periodical
0
if (
    int(self.map_id) == 6
    and int(self.attr1) == 65
    and hasattr(self, "current_iron")
    and self.current_iron
    and int(self.pos_x) == self.target_x
    and int(self.pos_y) == self.target_y
):
        if not hasattr(self, "_iron_req_counter"):
            self._iron_req_counter = 0
        vnum = self.current_iron["vnum"]
        self.api.send_packet(f"ncif 2 {vnum}")
        time.sleep(self.randomize_delay(0.75, 1.5))
        print(f"16-[MEMBER] {self.name} Recolecting Iron Ore")
        self.api.send_packet(f"npc_req 2 {vnum}")
        self._iron_req_counter += 1
        time.sleep(self.randomize_delay(13, 13.5))
        if self._iron_req_counter >= 2:
            time.sleep(7)
            self._iron_req_counter = 0
            try:
                member_slot = int(getattr(self, "subgroup_member_index", 0))
            except (TypeError, ValueError):
                member_slot = 0
            if member_slot > 0:
                setattr(selfsubg, f"iron_slot_{member_slot}", 0)
            if hasattr(self, "current_iron"):
                self.current_iron = {}