periodical
0
import asyncio
import time

CURRENT_ATTR1 = 65
NEXT_ATTR1 = 66
ITEM_VNUM = 1179
REQUIRED_QUANTITY = 20

if int(getattr(self, "attr1", 0)) != CURRENT_ATTR1:
        return

now = time.monotonic()
last_query = getattr(self, "_last_inventory_query", 0.0)
if now - last_query > 2.5:
        if getattr(self, "api", None) is not None:
                self.api.query_inventory()
                self._last_inventory_query = now
                await asyncio.sleep(self.randomize_delay(0.5, 0.75))

def _iter_inventory_blocks(player):
        for attr_name in ("main", "etc", "equip"):
                block = getattr(player, attr_name, None)
                if isinstance(block, dict):
                        iterable = block.values()
                elif isinstance(block, list):
                        iterable = block
                else:
                        continue
                yield from iterable

total_quantity = 0
for item in _iter_inventory_blocks(self):
        if isinstance(item, dict) and item.get("vnum") == ITEM_VNUM:
                quantity = item.get("quantity")
                if quantity is None:
                        quantity = item.get("amount")
                if quantity is None:
                        quantity = item.get("count")
                try:
                        total_quantity += int(quantity)
                except (TypeError, ValueError):
                        continue

if total_quantity >= REQUIRED_QUANTITY:
        print(f"[MEMBER] {self.name} has {total_quantity} Iron ore")
        cond.off = 0
        time.sleep(self.randomize_delay(0.75,1.5))
        cond.on = 102
        time.sleep(self.randomize_delay(0.75,1.5))
        self.attr1 = NEXT_ATTR1