periodical
1

updates = self.get_group_var("id_update", {})
if updates:
    # Inicializar diccionarios/listas si no existen
    if not hasattr(self, "account_map"):
        self.account_map = {}
    if not hasattr(self, "name_to_account"):
        self.name_to_account = {}
    if not hasattr(self, "partyID"):
        self.partyID = []

    for account, info in updates.items():
        new_name = info.get("name")
        old_name = info.get("old_name")
        new_id = info.get("id")
        old_id = info.get("old_id")

        if old_name and old_name in self.name_to_account:
            del self.name_to_account[old_name]

        if account in self.account_map:
            prev_name = self.account_map[account]
            if prev_name in self.name_to_account:
                del self.name_to_account[prev_name]

        self.account_map[account] = new_name
        self.name_to_account[new_name] = account
        if account not in self.attr51:
            self.attr51.append(account)

        if old_id:
            try:
                old_id_int = int(old_id)
            except ValueError:
                old_id_int = None
            if old_id_int is not None and old_id_int in self.partyID:
                self.partyID.remove(old_id_int)
        if new_id:
            try:
                new_id_int = int(new_id)
            except ValueError:
                new_id_int = None
            if new_id_int is not None and new_id_int not in self.partyID:
                self.partyID.append(new_id_int)

    self.set_group_var("id_update", {})